apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-depl
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.16
        ports:
        - containerPort: 80

#Save this file "nginx-depl.yaml" and run commands on terminal

PS C:\Users\spandey> kubectl apply -f .\nginx-depl.yaml
deployment.apps/nginx-depl created
PS C:\Users\spandey> kubectl get all
NAME                              READY   STATUS              RESTARTS   AGE
pod/nginx-depl-6f9dbcc988-jgxwm   0/1     ContainerCreating   0          8s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   101m

NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx-depl   0/1     1            0           8s

NAME                                    DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-depl-6f9dbcc988   1         1         0       8s
PS C:\Users\spandey>

# To see what kubernetes did with our commands

PS C:\Users\spandey> kubectl get deployment nginx-depl -o yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx"},"name":"nginx-depl","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx:1.16","name":"nginx","ports":[{"containerPort":80}]}]}}}}
  creationTimestamp: "2023-12-27T06:45:53Z"
  generation: 2
  labels:
    app: nginx
  name: nginx-depl
  namespace: default
  resourceVersion: "8266"
  uid: 340d124d-5eba-47fc-96ba-07ec1489ea6d
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.16
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2023-12-27T06:45:53Z"
    lastUpdateTime: "2023-12-27T06:46:05Z"
    message: ReplicaSet "nginx-depl-6f9dbcc988" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2023-12-27T06:49:32Z"
    lastUpdateTime: "2023-12-27T06:49:32Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
PS C:\Users\spandey>

# Add another yaml file for service and execute it

#Content -------
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
#--------------------------

PS C:\Users\spandey> kubectl apply -f .\nginx-service.yaml
service/nginx-service created
PS C:\Users\spandey> kubectl apply -f .\nginx-service.yaml
service/nginx-service configured
PS C:\Users\spandey> kubectl get service
NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
kubernetes      ClusterIP   10.96.0.1       <none>        443/TCP   145m
nginx-service   ClusterIP   10.110.150.19   <none>        80/TCP    114s
PS C:\Users\spandey> kubectl get all
pod/nginx-depl-78cc6468fb-5rlng   1/1     Running   0          15m
pod/nginx-depl-78cc6468fb-6wmzl   1/1     Running   0          15m

service/kubernetes      ClusterIP   10.96.0.1       <none>        443/TCP   146m
service/nginx-service   ClusterIP   10.110.150.19   <none>        80/TCP    3m14s

NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx-depl   2/2     2            2           45m

NAME                                    DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-depl-6f9dbcc988   0         0         0       45m
replicaset.apps/nginx-depl-78cc6468fb   2         2         2       15m
PS C:\Users\spandey> kubectl get service
NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
kubernetes      ClusterIP   10.96.0.1       <none>        443/TCP   148m
nginx-service   ClusterIP   10.110.150.19   <none>        80/TCP    5m9s
PS C:\Users\spandey> kubectl describe service nginx-service
Name:              nginx-service
Labels:            <none>
Annotations:       <none>
Selector:          app=nginx
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.110.150.19
IPs:               10.110.150.19
Port:              <unset>  80/TCP
TargetPort:        8080/TCP
Endpoints:         10.1.0.12:8080,10.1.0.13:8080
Session Affinity:  None
Events:            <none>
PS C:\Users\spandey> kubectl get pod -o wide
NAME                          READY   STATUS    RESTARTS   AGE   IP          NODE             NOMINATED NODE   READINESS GATES
nginx-depl-78cc6468fb-5rlng   1/1     Running   0          19m   10.1.0.12   docker-desktop   <none>           <none>
nginx-depl-78cc6468fb-6wmzl   1/1     Running   0          19m   10.1.0.13   docker-desktop   <none>           <none>
PS C:\Users\spandey>

#$ use this command to install kubernetes dashboard
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v3.0.0-alpha0/charts/kubernetes-dashboard.yaml

cerate admnin user, get RBAC and then fetch token you can get yaml from github kubernetes documentation
# https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md
serviceaccount/admin-user created
clusterrolebinding.rbac.authorization.k8s.io/admin-user created
PS C:\Users\spandey> kubectl -n kubernetes-dashboard create token admin-user
PS C:\Users\spandey> kubectl proxy
use this url to login with the token
http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/